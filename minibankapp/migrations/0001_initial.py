# Generated by Django 5.0.3 on 2024-04-21 10:25

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountTypeModel',
            fields=[
                ('Id_account_type', models.CharField(max_length=4, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Identyfikator rachunku - poprawny format: A-00', regex='^[a-zA-Z]{1}-[0-9]{2}$')], verbose_name='Identyfikator rachunku')),
                ('Description', models.CharField(max_length=45, verbose_name='Opis')),
                ('Subaccount', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator(message='Subkonto - poprawny format: 000000', regex='^[0-9]{6}$')], verbose_name='Subkonto')),
                ('Percent', models.DecimalField(decimal_places=2, default=0, max_digits=4, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Oprocentowanie')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerModel',
            fields=[
                ('Id_customer', models.AutoField(primary_key=True, serialize=False, verbose_name='Nr klienta')),
                ('First_name', models.CharField(max_length=45, verbose_name='Imię')),
                ('Last_name', models.CharField(max_length=45, verbose_name='Nazwisko')),
                ('Address', models.CharField(max_length=45, verbose_name='Adres')),
                ('Postal_code', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator(message='Kod pocztowy - poprawny format: 00-000', regex='^[0-9]{2}-[0-9]{3}$')], verbose_name='Kod pocztowy')),
                ('City', models.CharField(max_length=45, verbose_name='Miejscowość')),
                ('Pesel', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='PESEL - poprawny format: 00000000000', regex='^[0-9]{11}$')], verbose_name='PESEL')),
                ('Birth_date', models.DateField(verbose_name='Data urodzenia')),
                ('Birth_city', models.CharField(max_length=45, verbose_name='Miejsce urodzenia')),
                ('Identification', models.CharField(max_length=9, verbose_name='Dowód osobisty')),
                ('Created_date', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('Created_employee', models.CharField(max_length=45, verbose_name='Pracownik')),
            ],
        ),
        migrations.CreateModel(
            name='CustomPermission',
            fields=[
                ('permission_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.permission')),
            ],
            options={
                'permissions': (('standard_role', 'Standard role'), ('extended_role', 'Extended role')),
                'default_permissions': (),
            },
            bases=('auth.permission',),
            managers=[
                ('objects', django.contrib.auth.models.PermissionManager()),
            ],
        ),
        migrations.CreateModel(
            name='ParameterModel',
            fields=[
                ('Id_parameter', models.AutoField(primary_key=True, serialize=False)),
                ('Country_code', models.CharField(max_length=2, validators=[django.core.validators.RegexValidator(message='Kod kraju - poprawny format: AA', regex='^[a-zA-Z]{2}$')])),
                ('Bank_number', models.CharField(max_length=8, validators=[django.core.validators.RegexValidator(message='Numer Banku - poprawny format: 00000000', regex='^[0-9]{8}$')])),
            ],
        ),
        migrations.CreateModel(
            name='AccountModel',
            fields=[
                ('Id_account', models.AutoField(primary_key=True, serialize=False, verbose_name='Identyfikator rachunku')),
                ('Number_IBAN', models.CharField(max_length=28, null=True, verbose_name='Nr IBAN')),
                ('Balance', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Saldo')),
                ('Percent', models.DecimalField(decimal_places=2, default=0, max_digits=4, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Oprocentowanie')),
                ('Created_date', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('Created_employee', models.CharField(max_length=45, verbose_name='Pracownik')),
                ('FK_Id_account_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='minibankapp.accounttypemodel')),
                ('FK_Id_customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='minibankapp.customermodel')),
            ],
        ),
        migrations.CreateModel(
            name='OperationModel',
            fields=[
                ('Id_operation', models.AutoField(primary_key=True, serialize=False, verbose_name='Identyfikator operacji')),
                ('Type_operation', models.IntegerField(verbose_name='Typ operacji')),
                ('Value_operation', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Wartość operacji')),
                ('Balance_after_operation', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Saldo po operacji')),
                ('Operation_date', models.DateTimeField(auto_now_add=True, verbose_name='Data operacji')),
                ('Operation_employee', models.CharField(max_length=45, verbose_name='Pracownik')),
                ('FK_Id_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='minibankapp.accountmodel')),
            ],
        ),
    ]
